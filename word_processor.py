import re
import pyperclip


def word_processor(word: str) -> str:
    """
    iPadの辞書アプリの見出しの単語のコピーを与えると
    不要なもの（例えば、単語の間に挿入された'･'やアクセント付の母音、難易度を表す記号）
    を処理して単語そのものを抽出する関数。
    この処理によって単語を他の用途
    （例えば、SVL12000のレベルを検索したり、Google ImagesのURLを作成したり）
    に使用することが簡単になる。
    """
    # まずはiPadの辞書アプリの見出しをコピーしたときの処理を書く
    # これらの処理はkindleからコピーしたものに対してほとんど変更を加えない
    # 単語の前後にあるスペースを取り除く
    word = word.strip()
    # 改行の後に発音記号が表記されている場合に発音記号の部分を取り除く
    word = re.sub(r'\n/.+', '', word, flags=re.DOTALL)
    # 単語の末尾に付けられた数字を取り除く
    word = re.sub(r'[1-9]', '', word)
    # wisdom英和辞典独自のレベル分け記号を取り除く
    # wisdom英和辞典では単語の右に[生活]のようなマークが続く場合があり、
    # コピペするとそれがスペースとして挿入されるのでオプションとしてスペースも取り除いている
    word = re.sub(r'(?: [*†] ?)$', '', word)
    # 単語によっては複数のスペリングがあり、それが','の後に表記されているのでそれを取り除く
    word = re.sub(r',.+', '', word)

    # 単語の間に挟まれる'･'を取り除く
    word = re.sub(r'[･·]', '', word)
    # アクセント記号が付けられた母音を普通の母音に直す
    word = re.sub(r'[áà]', 'a', word)
    word = re.sub(r'[íì]', 'i', word)
    word = re.sub(r'[úù]', 'u', word)
    word = re.sub(r'[éè]', 'e', word)
    word = re.sub(r'[óò]', 'o', word)



    # 次にkindleからコピーした時に入りうる様々な記号を取り除く[—.,“”:;()!?]
    # 冒頭に記号が入る場合 ２つ連続で入る場合もあり得るので２回同じコードを書く
    word = re.sub(r'^[“(]', '', word)
    word = re.sub(r'^[“(]', '', word)
    # 末尾に記号が入る場合 ２つ連続で入る場合もあり得るので２回同じコードを書く
    word = re.sub(r'[—.,”:;)!?]$', '', word)
    word = re.sub(r'[—.,”:;)!?]$', '', word)

    return word


if __name__ == '__main__':
    pass



























